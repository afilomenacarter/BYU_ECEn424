                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f45805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6d802000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7c800000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | # Benjamin Bergeson
                            | # benbball
                            | 
                            | # 1. Moved constants 8 and 1 into separate registers so they don't have to be moved into r10 every loop.
                            | # 2. Moved order of instructions so the registers don't have to wait for values to be valid.
                            | # 3. Changed the initial check in the loop header to conditional jump to the Loop, which should be the default in almost all cases.
                            | # 4. Moved the incrementing of src an dst to a separte part that will not execute on the the last loop.
                            | 
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | # Loop header
0x032: 6222                 |   andq    %rdx,%rdx		# len <= 0?
0x034: 50a70000000000000000 |   mrmovq  (%rdi), %r10	# read val from src...
0x03e: 30f00000000000000000 |   irmovq  $0,%rax
0x048: 768d00000000000000   |   jg      Loop
0x051: 70c100000000000000   | 	jmp     Done		    # if so, goto Done:
0x05a:                      | Inc:
0x05a: c0f60800000000000000 |   iaddq   $8, %rsi		  # dst++
0x064: c0f70800000000000000 |   iaddq   $8, %rdi		  # src++
0x06e: 62aa                 |   andq    %r10, %r10		# val <= 0?
0x070: 50a70000000000000000 |   mrmovq  (%rdi), %r10	# read val from src...
0x07a: 718d00000000000000   | 	jle     Loop		      # if so, goto Npos:
0x083: c0f00100000000000000 |   iaddq   $1, %rax		  # count++
0x08d:                      | Loop:
0x08d: 40a60000000000000000 |   rmmovq  %r10, (%rsi)	# ...and store it to dst
0x097: c0f2ffffffffffffffff |   iaddq   $-1, %rdx		  # len--
0x0a1: 6222                 | 	andq    %rdx,%rdx		  # len > 0?
0x0a3: 765a00000000000000   | 	jg      Inc			      # if so, goto Inc:
0x0ac: 62aa                 |   andq    %r10, %r10		# val <= 0?
0x0ae: 71c100000000000000   |   jle     Done		      # if so, goto Npos:
0x0b7: c0f00100000000000000 |   iaddq   $1, %rax		  # count++
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0c1:                      | Done:
0x0c1: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0c2:                      | End:
                            | #/* $end ncopy-ys */
0x0c2:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x0c8:                      | 	.align 8
0x0c8:                      | src:
0x0c8: ffffffffffffffff     | 	.quad -1
0x0d0: 0200000000000000     | 	.quad 2
0x0d8: fdffffffffffffff     | 	.quad -3
0x0e0: 0400000000000000     | 	.quad 4
0x0e8: fbffffffffffffff     | 	.quad -5
0x0f0: faffffffffffffff     | 	.quad -6
0x0f8: 0700000000000000     | 	.quad 7
0x100: 0800000000000000     | 	.quad 8
0x108: 0900000000000000     | 	.quad 9
0x110: 0a00000000000000     | 	.quad 10
0x118: 0b00000000000000     | 	.quad 11
0x120: f4ffffffffffffff     | 	.quad -12
0x128: f3ffffffffffffff     | 	.quad -13
0x130: 0e00000000000000     | 	.quad 14
0x138: 0f00000000000000     | 	.quad 15
0x140: f0ffffffffffffff     | 	.quad -16
0x148: 1100000000000000     | 	.quad 17
0x150: eeffffffffffffff     | 	.quad -18
0x158: edffffffffffffff     | 	.quad -19
0x160: 1400000000000000     | 	.quad 20
0x168: ebffffffffffffff     | 	.quad -21
0x170: 1600000000000000     | 	.quad 22
0x178: 1700000000000000     | 	.quad 23
0x180: 1800000000000000     | 	.quad 24
0x188: e7ffffffffffffff     | 	.quad -25
0x190: 1a00000000000000     | 	.quad 26
0x198: e5ffffffffffffff     | 	.quad -27
0x1a0: 1c00000000000000     | 	.quad 28
0x1a8: e3ffffffffffffff     | 	.quad -29
0x1b0: 1e00000000000000     | 	.quad 30
0x1b8: 1f00000000000000     | 	.quad 31
0x1c0: 2000000000000000     | 	.quad 32
0x1c8: 2100000000000000     | 	.quad 33
0x1d0: 2200000000000000     | 	.quad 34
0x1d8: ddffffffffffffff     | 	.quad -35
0x1e0: dcffffffffffffff     | 	.quad -36
0x1e8: 2500000000000000     | 	.quad 37
0x1f0: daffffffffffffff     | 	.quad -38
0x1f8: 2700000000000000     | 	.quad 39
0x200: d8ffffffffffffff     | 	.quad -40
0x208: 2900000000000000     | 	.quad 41
0x210: d6ffffffffffffff     | 	.quad -42
0x218: 2b00000000000000     | 	.quad 43
0x220: d4ffffffffffffff     | 	.quad -44
0x228: d3ffffffffffffff     | 	.quad -45
0x230: 2e00000000000000     | 	.quad 46
0x238: 2f00000000000000     | 	.quad 47
0x240: 3000000000000000     | 	.quad 48
0x248: 3100000000000000     | 	.quad 49
0x250: 3200000000000000     | 	.quad 50
0x258: cdffffffffffffff     | 	.quad -51
0x260: 3400000000000000     | 	.quad 52
0x268: cbffffffffffffff     | 	.quad -53
0x270: caffffffffffffff     | 	.quad -54
0x278: c9ffffffffffffff     | 	.quad -55
0x280: c8ffffffffffffff     | 	.quad -56
0x288: c7ffffffffffffff     | 	.quad -57
0x290: c6ffffffffffffff     | 	.quad -58
0x298: c5ffffffffffffff     | 	.quad -59
0x2a0: c4ffffffffffffff     | 	.quad -60
0x2a8: c3ffffffffffffff     | 	.quad -61
0x2b0: c2ffffffffffffff     | 	.quad -62
0x2b8: c1ffffffffffffff     | 	.quad -63
0x2c0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x2d0:                      | 	.align 16
0x2d0:                      | Predest:
0x2d0: fadebc0000000000     | 	.quad 0xbcdefa
0x2d8:                      | dest:
0x2d8: abefcd0000000000     | 	.quad 0xcdefab
0x2e0: abefcd0000000000     | 	.quad 0xcdefab
0x2e8: abefcd0000000000     | 	.quad 0xcdefab
0x2f0: abefcd0000000000     | 	.quad 0xcdefab
0x2f8: abefcd0000000000     | 	.quad 0xcdefab
0x300: abefcd0000000000     | 	.quad 0xcdefab
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0:                      | Postdest:
0x4d0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x4d8:                      | .align 8
                            | # Run time stack
0x4d8: 0000000000000000     | 	.quad 0
0x4e0: 0000000000000000     | 	.quad 0
0x4e8: 0000000000000000     | 	.quad 0
0x4f0: 0000000000000000     | 	.quad 0
0x4f8: 0000000000000000     | 	.quad 0
0x500: 0000000000000000     | 	.quad 0
0x508: 0000000000000000     | 	.quad 0
0x510: 0000000000000000     | 	.quad 0
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
                            | 
0x558:                      | Stack:
